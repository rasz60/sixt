{"version":3,"file":"js/898.8ec45c71.js","mappings":"kIAAA,i2F","sources":["webpack://sixt.github.io/./public/posts/g1_seq1.md"],"sourcesContent":["export default \"### Github repository는 늘어나는데 기록이 하나도 없다. 😂\\r\\n\\r\\ncommit message만 들여다보고는 자세히 알기 힘들어서 구현했던 기능도 다시 구글링해야 하는 깊은 도르마무에 빠졌다. 👾\\r\\n\\r\\n포트폴리오를 만들 생각이 있던 차에, '아예 블로그를 만들어봐야겠다' 생각이 들었다.\\r\\n<br/><br/>\\r\\n\\r\\n### Vue3 프로젝트 생성\\r\\n\\r\\n회사 동료와 최근에 진행했던 `vue3`를 이용해서 만들기로 했다.<br/>\\r\\n구현을 위한 자세한 내용은 [@yemsu🔗](https://yemsu.github.io/make-github-io-blog-with-vue3-1/)라는 분의 블로그를 상당히 많이 참고했다.🙇‍♂️\\r\\n\\r\\n<br/>간략하게는 이런 식으로 동작하는 블로그이다.\\r\\n<br/>① markdown 파일로 게시글 작성, Git repository에 commit\\r\\n<br/>② markdown 파일을 html로 전환\\r\\n<br/>③ 게시글 리스트, 게시글 상세 페이지에 출력\\r\\n<br/><br/>\\r\\n먼저 VS-Code를 이용해서 vue 프로젝트를 생성했다.\\r\\n\\r\\n```\\r\\nvue create ${프로젝트를 저장할 경로}\\r\\n..\\r\\n> vue-st ([Vue 3] babel, router, vuex, eslint\\r\\n.,\\r\\n```\\r\\n\\r\\n<br/>\\r\\n\\r\\n### 초기 설정\\r\\n\\r\\n① 프로젝트 생성한 폴더를 VS Code에 불러온 후, 사용할 dependency들을 설치한다.\\r\\n\\r\\n###### ㄴ 직전 프로젝트 진행 시, funding 때문에 dependency가 제대로 동작하지 않아, 설치할 때 무조건 반사로 --no-fund를 붙이고 있다.\\r\\n\\r\\n```\\r\\n// vue-router : 페이지 전체를 동기하지 않고, url에 매핑된 component 불러오도록 함\\r\\nnpm i vue-router@next --no-fund\\r\\n\\r\\n// raw-loader : markdown 파일을 읽어 옴\\r\\nnpm i raw-loader --no-fund\\r\\n\\r\\n// showdown : raw-loader로 읽어온 markdown 파일을 html형태로 변환\\r\\nnpm i showdown --no-fund\\r\\n\\r\\n// vuetify : component 제공\\r\\nnpm i vuetify --no-fund\\r\\nnpm i -D vuetify vite-plugin-vuetify --no-fund\\r\\n\\r\\n// mdi/font : icon 제공\\r\\nnpm i @mdi/font --no-fund\\r\\n\\r\\n// scss : style 시트를 scss로 작성할 예정 (사실.. 잘 사용할지 모르지만 따라함)\\r\\nnpm i sass sass-loader@10 -D --no-fund\\r\\n```\\r\\n\\r\\n###### 초반에 eslint와 prettier가 충돌해서 꽤나 애를 먹었..지만 해결! 💁‍♂️[🔗](https://rasz60.github.io/sixt/#/logging/2)\\r\\n\\r\\n<br/>\\r\\n② main.js : 설치한 dependency들을 사용할 수 있도록 main.js를 작성했다. \\r\\n###### ㄴvuex도 쓸 줄 몰라서 일단 제외했다. 나중에 한 번 써봐야지🤦‍♂️\\r\\n\\r\\n```\\r\\nimport { createApp } from \\\"vue\\\";\\r\\nimport App from \\\"./App.vue\\\";\\r\\nimport router from \\\"./router\\\";\\r\\nimport vuetify from \\\"./plugins/vuetify\\\";\\r\\n\\r\\nlet app = createApp(App);\\r\\n\\r\\napp.use(router).use(vuetify).mount(\\\"#app\\\");\\r\\n```\\r\\n\\r\\n<br/>\\r\\n③ vue.config.js : markdown 파일을 raw-loader를 이용하여 불러오도록 설정\\r\\n```\\r\\nconst { defineConfig } = require(\\\"@vue/cli-service\\\");\\r\\nmodule.exports = defineConfig({\\r\\n  transpileDependencies: true,\\r\\n  /* 아래 부분 추가 */\\r\\n  chainWebpack: (config) => {\\r\\n    config.module\\r\\n      .rule(\\\"*.md\\\")\\r\\n      .test(/\\\\.md?$/)\\r\\n      .use(\\\"raw-loader\\\")\\r\\n      .loader(\\\"raw-loader\\\")\\r\\n      .end();\\r\\n  },\\r\\n});\\r\\n```\\r\\n<br/>\\r\\n④ /src/plugins/vuetify.js : src 폴더 아래 plugins 폴더를 생성하고 Vuetify 사용을 위한 설정 파일 생성\\r\\n\\r\\n```\\r\\nimport \\\"@mdi/font/css/materialdesignicons.css\\\";\\r\\nimport \\\"vuetify/styles\\\";\\r\\nimport { createVuetify } from \\\"vuetify\\\";\\r\\nimport * as components from \\\"vuetify/components\\\";\\r\\nimport * as directives from \\\"vuetify/directives\\\";\\r\\n\\r\\nexport default createVuetify({\\r\\n  components,\\r\\n  directives,\\r\\n});\\r\\n\\r\\n```\\r\\n\\r\\n<br/>\\r\\n⑤ 그리고 나서, 프로젝트를 실행하면 vue에서 제공하는 기본 페이지가 나온다.\\r\\n```\\r\\nnpm run serve\\r\\n```\\r\\n<br/>\\r\\n\\r\\n이걸로 초기 세팅은 끝! 🙌\\r\\n\";"],"names":[],"sourceRoot":""}