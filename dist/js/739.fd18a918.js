"use strict";(self["webpackChunksixt_github_io"]=self["webpackChunksixt_github_io"]||[]).push([[739],{9739:function(n,r,t){t.r(r),r["default"]='### 프로젝트 세팅\r\n\r\n저번 포스팅에서는 기본 Vue 프로젝트를 기동할 수 있는 초기 설정을 마쳤다.\r\n<br/>\r\n이번엔 본격적으로 프로젝트 폴더 트리 구성과 페이지를 세팅해보자.\r\n<br/><br/>\r\n\r\n폴더 트리 구성\r\n\r\n```\r\nSIXT.GITHUB.IO\r\n ㄴpublic\r\n   ㄴjson\r\n   ㄴposts\r\n ㄴsrc\r\n   ㄴassets\r\n     ㄴjs\r\n     ㄴstyle\r\n   ㄴcomponents\r\n   ㄴplugins\r\n   ㄴrouter\r\n   ㄴutils\r\n   ㄴviews\r\n  App.vue\r\n  main.js\r\n ..\r\n package.json\r\n vue.config.js\r\n ..\r\n```\r\n\r\n폴더 트리 구성이 특별할 건 없다. 참고로 나는 풀스택을 지향하지만 아무래도 백엔드 개발자이다.<br/>\r\n그러니 폴더 구성은 내가 맘대로 해버린 거라서 일반적인 구성과는 다를 수도 있다.🤷‍♂️<br/><br/>\r\n\r\n### 화면 구성\r\n\r\n다음으로 화면을 구성해보자.<br/>\r\n\r\n대략적으로 .vue 파일은 아래와 같이 구성된다.<br/>\r\n① `<script setup>` : 사용할 vue 파일 import, 변수 선언 등<br/>\r\n② `<template>` : 화면을 그리는 html 코드<br/>\r\n③ `<script>` : data, methods, computed 등 vue에서 사용할 변수 혹은 메서드를 선언하거나, created, mounted, watch 등 페이지 생성 주기에 따라 필요한 로직을 실행할 수 있다.<br/>\r\n④ `<style>` : html style을 정의하는 css 소스\r\n<br/><br/>\r\n\r\n우선 아래 3개 소스를 전부 복붙해놓고 다음 포스트에서 하나씩 뜯어보도록 하자.<br/>\r\nApp.vue는 이미 src 폴더에 생성되어 있고, MenuView.vue와 ContentView.vue는 views 폴더 안에 생성한다.<br/><br/>\r\n\r\nApp.vue\r\n\r\n```\r\n<script setup>\r\nimport MenuView from "@/views/MenuView.vue";\r\nimport ContentView from "@/views/ContentView.vue";\r\n<\/script>\r\n\r\n<template>\r\n  <v-container id="container">\r\n    <v-row id="main">\r\n      <v-col cols="3" id="menu">\r\n        <MenuView />\r\n      </v-col>\r\n      <v-col cols="9">\r\n        <ContentView />\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "app",\r\n};\r\n<\/script>\r\n\r\n<style lang="scss">\r\n.v-container {\r\n  padding-top: 3rem !important;\r\n  min-height: 800px;\r\n\r\n  #main {\r\n    height: auto;\r\n    padding: 0;\r\n  }\r\n\r\n  #menu {\r\n    height: auto;\r\n    padding-left: 1em;\r\n    padding-right: 3em;\r\n  }\r\n}\r\n</style>\r\n```\r\n\r\nMenuView.vue\r\n\r\n```\r\n<template>\r\n  <v-layout id="menuSection">\r\n    \x3c!-- 최상단 프로필 부분 start --\x3e\r\n    <v-list id="profile">\r\n      <v-list-item\r\n        prepend-avatar="프로필 이미지"\r\n        title="본인의 이름"\r\n        subtitle="이메일 주소"\r\n      >\r\n        <div id="social">\r\n          <v-icon\r\n            icon="mdi-github"\r\n            @click="newWindow(`github url을 입력해주세요`)"\r\n          />\r\n        </div>\r\n      </v-list-item>\r\n    </v-list>\r\n    \x3c!-- 최상단 프로필 부분 end --\x3e\r\n\r\n    <v-divider></v-divider>\r\n\r\n    \x3c!-- 메뉴 item 부분 start --\x3e\r\n    <v-list density="compact" nav id="nav">\r\n      <v-list-item\r\n        prepend-icon="mdi-note-edit-outline"\r\n        title="LOGGING"\r\n        value="blog"\r\n        class="navItems"\r\n      >\r\n      </v-list-item>\r\n    </v-list>\r\n    \x3c!-- 메뉴 item 부분 end --\x3e\r\n  </v-layout>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "menuView",\r\n  data() {\r\n    return {};\r\n  },\r\n  methods: {\r\n    newWindow(url) {\r\n      // github url을 새 탭에서 열어주는 메서드입니다.\r\n      window.open("about:blank").location.href = url;\r\n    },\r\n  },\r\n};\r\n<\/script>\r\n\r\n<style lang="scss">\r\n#menuSection {\r\n  display: block;\r\n  position: relative;\r\n  height: 90vh;\r\n  background-color: rgba(247, 165, 1, 0.65);\r\n  border-radius: 10px;\r\n  padding: 10px;\r\n  box-shadow: 0.3em 0.3em 1em lightgray;\r\n\r\n  transition: all 10ms linear;\r\n\r\n  /* v-list custom */\r\n  .v-list {\r\n    background-color: transparent;\r\n    color: #1a1a1a;\r\n\r\n    .v-list-item-title {\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  /* profile section custom */\r\n  #profile {\r\n    width: 100%;\r\n    margin-bottom: 10px;\r\n\r\n    .v-avatar {\r\n      width: 150px;\r\n      height: 150px;\r\n      background-color: ghostwhite;\r\n    }\r\n    .v-avatar img {\r\n      width: 100%;\r\n    }\r\n    .v-avatar:hover {\r\n      cursor: pointer;\r\n    }\r\n    .v-avatar:hover img {\r\n      transition-property: all; /*모든부분 변화*/\r\n      transition-duration: 0.2s; /*0.2s동안 변화*/\r\n      transition-timing-function: linear; /*일정한 속도로 변화*/\r\n      transition-delay: 0; /*즉시변화-> 0이 default값이므로 생략 가능*/\r\n      transform: scale(1.15); /* 1.15배 크기로 변화*/\r\n    }\r\n\r\n    div#social {\r\n      margin-top: 10px;\r\n\r\n      .v-icon {\r\n        padding: 18px !important;\r\n        cursor: pointer;\r\n      }\r\n\r\n      .v-icon:hover {\r\n        transition-property: all; /*모든부분 변화*/\r\n        transition-duration: 0.2s; /*0.2s동안 변화*/\r\n        transition-timing-function: linear; /*일정한 속도로 변화*/\r\n        transition-delay: 0; /*즉시변화-> 0이 default값이므로 생략 가능*/\r\n        transform: scale(1.15); /* 1.15배 크기로 변화*/\r\n      }\r\n    }\r\n  }\r\n\r\n  /* nav section custom */\r\n  #nav .navItems {\r\n    margin: 0.2rem;\r\n    padding: 1.2rem;\r\n    font-size: 1.2rem;\r\n\r\n    .v-list-item-title {\r\n      text-align: center;\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n}\r\n</style>\r\n```\r\n\r\nContentView.vue\r\n\r\n```\r\n<template>\r\n  <div id="contents">\r\n    \x3c!-- 지금은 비워두겠습니다. --\x3e\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: "contentSection",\r\n};\r\n<\/script>\r\n\r\n<style lang="scss">\r\n#contents {\r\n  height: 100%;\r\n  padding-left: 10px;\r\n}\r\n</style>\r\n```\r\n'}}]);
//# sourceMappingURL=739.fd18a918.js.map